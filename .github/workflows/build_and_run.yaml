---
name: build and run images
on: [push, workflow_dispatch]
jobs:
  build_and_run:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - kernel: "5.11.0-46-generic"
            suite: "focal"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build and test run Debirf image
        env:
          KERNEL: ${{ matrix.kernel }}
          SUITE: ${{ matrix.suite }}
        run: ./debirf/build_and_run_images
        # if: github.ref == 'refs/heads//aster'
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          path: debirf/build/coinboot*
        # if: github.ref == 'refs/heads/main'

  create_pre-release:
    needs: build_and_run
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          path: debirf/build
      - name: Setup Golang for github-release
        uses: actions/setup-go@v1
      - name: Create pre-release
        env:
          GITHUB_USER: "frzb"
          GITHUB_REPO: "coinboot"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOPATH: "/home/runner/go"
        run: |
          go get github.com/aktau/github-release
          export PATH=$PATH:"${GOPATH}"/bin
          export PRE_RELEASE_TAG=pre-release-"${GITHUB_RUN_ID}"-"${GITHUB_RUN_ATTEMPT}"
          ls -la "${GOPATH}"/bin
          env
          github-release --version
          ls -la ./debirf/*/*
          git config --global user.email "build@coinboot.io"
          git config --global user.name "Github Actions"
          git tag $PRE_RELEASE_TAG
          git remote rm origin
          git remote add origin https://"${{ secrets.GITHUB_TOKEN}}"@github.com/"${GITHUB_USER}"/"${GITHUB_REPO}".git
          git push --set-upstream origin $PRE_RELEASE_TAG
          github-release release --pre-release --tag $PRE_RELEASE_TAG --name $PRE_RELEASE_TAG
          set -x
          echo $0
          find ./debirf/build/artifact -name coinboot-* -type f -execdir sh -c "readlink -f {} && basename {}" \; | xargs -n 2 sh -c 'github-release upload --tag $PRE_RELEASE_TAG -n $2 -f $1 -l $2' sh

  verify_and_release:
    needs: create_pre-release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/download-artifact@v2
      - name: Set up Coinboot requirements
        shell: bash
        # run: https://raw.githubusercontent.com/frzb/coinboot/"${GITHUB_REF##*/}"/setup_coinboot_requirements | bash
        run: ./setup_coinboot_requirements
      - name: Run Coinboot server and boot workers
        env:
          KERNEL: "5.11.0-46-generic"
          SUITE: "focal"
        shell: bash
        run: |
          export PRE_RELEASE_TAG=pre-release-"${GITHUB_RUN__ID}"
          export RELEASE=$PRE_RELEASE_TAG
          ./server/run_coinboot
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          path: debirf/build
      - name: Create release from pre-release on main
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_USER: "frzb"
          GITHUB_REPO: "coinboot"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOPATH: "/home/runner/go"
        run: |
          go get github.com/aktau/github-release
          export PATH=$PATH:"${GOPATH}"/bin
          export PRE_RELEASE_TAG=pre-release-"${GITHUB_RUN_ID}"
          export RELEASE_TAG=$(date +%Y%m%d)
          # actions/checkout@v2 with depth 0 is not pulling tags.
          # To avoid a full pull we just pull the tags.
          git pull --tags origin
          git config --global user.email "build@coinboot.io"
          git config --global user.name "Github Actions"
          git tag -d $PRE_RELEASE_TAG
          git tag $RELEASE_TAG
          git remote rm origin
          git remote add origin https://"${GITHUB_TOKEN}"@github.com/"${GITHUB_USER}"/"${GITHUB_REPO}".git
          git push --quiet --set-upstream origin $RELEASE_TAG
          git push origin :refs/tags/"${PRE_RELEASE_TAG}"
          github-release -v release --tag $RELEASE_TAG --name $RELEASE_TAG
          find ./debirf/build/artifact -name coinboot-* -type f -execdir sh -c "readlink -f {} && basename {}" \; | xargs -n 2 sh -c 'github-release -v upload --tag $RELEASE_TAG -n $2 -f $1 -l $2' sh
      - name: Remove pre-release if not on main or failing
        # Only remove pre-release on main, else make a release.
        if: github.ref != 'refs/heads/main' || ${{ failure() }}
        env:
          GITHUB_USER: "frzb"
          GITHUB_REPO: "coinboot"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOPATH: "/home/runner/go"
        run: |
          go get github.com/aktau/github-release
          export PATH=$PATH:"${GOPATH}"/bin
          export PRE_RELEASE_TAG=pre-release-"${GITHUB_RUN_ID}"
          github-release -v delete -t $PRE_RELEASE_TAG
          git config --global user.email "build@coinboot.io"
          git config --global user.name "Github Actions"
          set +x
          # actions/checkout@v2 with depth 0 is not pulling tags.
          # To avoid a full pull we just fetch the tags.
          git fetch --all --tags
          git tag -d $PRE_RELEASE_TAG
          git remote rm origin
          git remote add origin https://"${GITHUB_TOKEN}"@github.com/"${GITHUB_USER}"/"${GITHUB_REPO}".git
          git push origin :refs/tags/"${PRE_RELEASE_TAG}"
          git push origin --tags
