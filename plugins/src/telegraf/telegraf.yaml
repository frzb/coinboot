
---
# Copyright (C) 2021 Gunter Miegel coinboot.io
#
# This file is part of Coinboot.
# This software may be modified and distributed under the terms
# of the MIT license.  See the LICENSE file for details.
#
# Please notice even while this script is licensed with the
# MIT license the software packaged by this script may be licensed by
# an other license with different terms and conditions.
# You have to agree to the license of the packaged software to use it.

plugin: Telegraf
archive_name: telegraf
version: v1.18.1
description: The plugin-driven server agent for collecting & reporting metrics.
maintainer: Gunter Miegel <gunter.miegel@coinboot.io>
source: https://github.com/influxdata/telegraf
run: |
  set -e -x

  TELEGRAF_RELEASE=v1.18.1

  sudo apt update
  sudo apt install make git golang-1.14 --yes
  
  pwd
  cd /mnt/src/telegraf/upstream
  export PATH=$PATH:/usr/lib/go-1.14/bin
  export GOPATH=$HOME/work
  mkdir -vp $HOME/work $HOME/go

  make

  sudo apt purge make git golang-1.14 --yes
  sudo apt autoremove --yes
  sudo apt autoclean

  sudo rm -rf $GOPATH

  cp -v /mnt/src/telegraf/upstream/telegraf /usr/local/bin/telegraf

  if ! grep "^telegraf:" /etc/group &>/dev/null; then
      groupadd -r telegraf
  fi

  if ! id telegraf &>/dev/null; then
      useradd -r -M telegraf -s /bin/false -d /etc/telegraf -g telegraf
  fi

  if [[ ! -d /etc/telegraf/telegraf.d ]]; then
      mkdir -p /etc/telegraf/telegraf.d
  fi

  sudo tee /etc/telegraf/telegraf.conf << 'EOF'
  [[outputs.influxdb_v2]]
    urls = ["http://${INFLUX_HOST}:8086"]
    token = "${INFLUX_TOKEN}"
    organization = "coinboot.io"
    bucket = "telegraf"

  [[inputs.cpu]]
    ## Whether to report per-cpu stats or not
    percpu = true
    ## Whether to report total system cpu stats or not
    totalcpu = true
    ## If true, collect raw CPU time metrics.
    collect_cpu_time = false
    ## If true, compute and report the sum of all non-idle CPU states.
    report_active = false

  [[inputs.disk]]
    ## By default stats will be gathered for all mount points.
    ## Set mount_points will restrict the stats to only the specified mount points.
    # mount_points = ["/"]
    ## Ignore mount points by filesystem type.
    ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]

  [[inputs.diskio]]
  [[inputs.mem]]
  [[inputs.net]]
  #[[inputs.processes]]
  #[[inputs.swap]]
  [[inputs.system]]
  EOF

  sudo tee /etc/telegraf/telegraf.d/team_read_miner.conf << 'EOF'
  [[inputs.exec]]
    commands = ['''/bin/bash -c 'echo  \{\"command\": \"summary\"\} | /bin/nc 127.0.0.1 4029' ''']
    timeout = "5s"
    name_override = "miner_stats_summary"
    data_format = "json"
    json_query = "SUMMARY"

  [[inputs.exec]]
    commands = ['''/bin/bash -c 'echo  \{\"command\": \"devs\"\} | /bin/nc 127.0.0.1 4029' ''']
    timeout = "5s"
    name_override = "miner_stats_devs"
    data_format = "json"
    tag_keys = ["GPU"]
    json_query = "DEVS"
  EOF

  sudo tee /etc/systemd/system/telegraf.service << 'EOF'
  [Unit]
  Description=The plugin-driven server agent for reporting metrics into InfluxDB
  Documentation=https://github.com/influxdata/telegraf
  After=network.target

  [Service]
  EnvironmentFile=-/etc/environment
  User=telegraf
  ExecStart=/usr/local/bin/telegraf -config /etc/telegraf/telegraf.conf -config-directory /etc/telegraf/telegraf.d $TELEGRAF_OPTS
  ExecReload=/bin/kill -HUP $MAINPID
  Restart=on-failure
  RestartForceExitStatus=SIGPIPE
  KillMode=control-group

  [Install]
  WantedBy=multi-user.target
  EOF

  systemctl enable telegraf.service
