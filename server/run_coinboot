#!/bin/bash
set -e -o pipefail
set -x
# Copyright (C) 2019 Gunter Miegel coinboot.io
#
# This file is part of Coinboot.
#
# Coinboot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

export RELEASE=$(date +'%Y%m%d')
export VERSION='0.98 Beta'
MACHINE_IP='192.168.1.10'
DEFAULT_ROUTE=$(ip route | grep default | grep -v br0)
DEFAULT_GW=$(ip route | grep default | grep -v br0 | cut -d ' ' -f 3)

if [ -d "/vagrant" ]; then
  EXT_IF='enp0s8'
else
  EXT_IF='ens4'
fi

change_to_build_dir() {
if [ ! -d "/vagrant" ] && [[ $(basename $PWD) != server ]]; then
  cd server
else
  cd /vagrant/server
fi
}

get_bridge_interface() {
  ip a | grep '192.168.1.2/24' |grep -oP 'br-.*'
}

get_interface_for_bridge() {
  ip a | grep '192.168.1.2/24' |grep -oP '\s(w+)$'
}

get_default_route() {
  ip route | grep default | grep -v br0
}

get_default_gateway() {
  ip route | grep default | grep -v br0 | cut -d ' ' -3
}

update_default_route() {
  ip route
  sudo dhclient -v br0
  ip route
}

add_address_to_br0() {
  sudo ip addr add 192.168.1.2/24 dev br0
}

move_ext_interface_to_bridge() {
  brctl show
  ip a
  if [[ -z  $(get_bridge_interface) ]] && ! ip a | grep -oP '\sbr0'; then
    sudo brctl addbr br0
    sudo brctl addif br0 $EXT_IF
    sudo ip link set br0 up
  fi
  brctl show
}

migrate_ips_to_bridge_interface() {
  ip a
  while ip -4 addr show dev $EXT_IF | grep inet; do
   IP=$(ip -4 a show dev $EXT_IF | grep -m 1 inet | cut -d ' ' -f6)
   echo "Migrating $IP to br0 now"
   sudo ip addr add $IP dev br0
   sudo ip addr del $IP dev $EXT_IF
  done
}


build_docker_image() {
  docker build -t coinboot/coinboot:latest ./docker/
}

run_docker_compose() {
  pwd
  docker-compose up -d
  sleep 30
  docker-compose logs 
}

# TODO: Refactor this - should be possible with one curl call
wait_for_server_to_be_ready() {
  while ! [ $(curl --silent http://192.168.1.2 | jq length) -gt 4 ]; do
    curl --silent http://192.168.1.2 | jq '.[].name'
    echo '------------'
    sleep 10
  done
}

run_with_libvirt_bios() {
  sudo virt-install --pxe --name coinboot-bios --memory 1024 --disk none --network bridge=br0 --boot menu=on,useserial=on --noautoconsole
}

run_with_libvirt_uefi() {
  sudo virt-install --pxe --name coinboot-uefi --memory 1024 --disk none --network bridge=br0 --boot uefi,menu=on,useserial=on --noautoconsole
}

verify_over_ssh() {
  while ! ping -c 1 $MACHINE_IP; do
    echo 'Waiting for Coinboot machine to respond to our ICMP echo requests ...'
    sleep 10
  done

  while ! nc -z $MACHINE_IP 22; do
    echo 'Waiting for Coinboot machine to listen on port 22/SSH ...'
  sleep 10
  done

  # FIXME: RELEASE does not expanse to date string when 'latest' is specified
  # while ! sshpass -p ubuntu ssh -o StrictHostKeyChecking=no -l ubuntu -p 22 $MACHINE_IP "grep -C 10 $RELEASE /etc/motd && lsb_release -a && uname -a && zramctl" ; do
  while ! sshpass -p ubuntu ssh -o StrictHostKeyChecking=no -l ubuntu -p 22 $MACHINE_IP "cat /etc/motd && lsb_release -a && uname -a && df -m && free -m && zramctl" ; do
    echo 'Waiting for SSH login to succeed...'
  sleep 10
  done

  DOMAIN=$(sudo virsh list --name)
  sudo virsh shutdown $DOMAIN
  sudo virsh list --all
  while nc -z $MACHINE_IP 22; do
    echo 'Waiting for Coinboot machine to stop listen on port 22/SSH ...'
    sleep 10
  done
  sudo virsh undefine --nvram $DOMAIN
 }

# ------------- main -------------

sudo apt-get update

sudo apt-get  install --yes --no-install-recommends bridge-utils jq sshpass libvirt-bin virtinst qemu-system-x86 ipxe-qemu ovmf

change_to_build_dir

move_ext_interface_to_bridge
migrate_ips_to_bridge_interface
update_default_route
echo 'nameserver 8.8.8.8' | sudo tee /etc/resolv.conf
dig registry-1.docker.io || true  

if ! [ -d "/vagrant" ]; then
  add_address_to_br0
  update_default_route
fi

# We also need to load the environment before calling docker-compose:
# https://github.com/docker/compose/issues/3435
export $(grep -v '^#' ./conf/environment/* | xargs)


# Beside $RELEASE which is a Travis CI environment variable we need
export RELEASE=$TRAVIS_BUILD_ID

build_docker_image

run_docker_compose

wait_for_server_to_be_ready

run_with_libvirt_bios

verify_over_ssh

run_with_libvirt_uefi

verify_over_ssh
